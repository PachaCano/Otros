[
    {
        "id": "cd6a546976db31b5",
        "type": "tab",
        "label": "Config",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "59fa7343ef35ec3d",
        "type": "tab",
        "label": "Auth",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "27c9c3458b135fa3",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a6bb807b10db2b5c",
        "type": "subflow",
        "name": "Estado BE / Auth",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 240,
                "wires": [
                    {
                        "id": "3cb71b766eb54a51"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 60,
                "wires": [
                    {
                        "id": "74a686b526dc8160",
                        "port": 0
                    }
                ]
            },
            {
                "x": 900,
                "y": 320,
                "wires": [
                    {
                        "id": "74a686b526dc8160",
                        "port": 1
                    }
                ]
            },
            {
                "x": 880,
                "y": 420,
                "wires": [
                    {
                        "id": "74a686b526dc8160",
                        "port": 2
                    }
                ]
            },
            {
                "x": 870,
                "y": 540,
                "wires": [
                    {
                        "id": "74a686b526dc8160",
                        "port": 3
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "outputLabels": [
            "OK",
            "Renovar Token",
            "Disconnected",
            "Desconocido"
        ],
        "status": {
            "x": 920,
            "y": 260,
            "wires": [
                {
                    "id": "b6951f9f85158b7f",
                    "port": 0
                },
                {
                    "id": "74a686b526dc8160",
                    "port": 0
                },
                {
                    "id": "74a686b526dc8160",
                    "port": 1
                },
                {
                    "id": "74a686b526dc8160",
                    "port": 2
                },
                {
                    "id": "74a686b526dc8160",
                    "port": 3
                }
            ]
        }
    },
    {
        "id": "0e5b3778adc62c63",
        "type": "subflow",
        "name": "Autenticador",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "507d67821e2b3882"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 910,
                "y": 180,
                "wires": [
                    {
                        "id": "e20da518c33f7b9a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 900,
                "y": 340,
                "wires": [
                    {
                        "id": "b45ff7e980a15ef3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "username",
                "type": "str",
                "value": "userAdmin"
            },
            {
                "name": "password",
                "type": "str",
                "value": "elipacha2022"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "outputLabels": [
            "TOKEN OK",
            "NO TOKEN :("
        ],
        "status": {
            "x": 840,
            "y": 40,
            "wires": [
                {
                    "id": "3c4782779d600ca9",
                    "port": 0
                },
                {
                    "id": "b45ff7e980a15ef3",
                    "port": 0
                },
                {
                    "id": "49d12542bd6a0e6f",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3c9196bdbec59b48",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "acbec5fe0f8fd447",
        "type": "ui_tab",
        "name": "Temperatura",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5c916f117a65dbca",
        "type": "ui_group",
        "name": "Default",
        "tab": "acbec5fe0f8fd447",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2f514204aa9d12a5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "cpsoa.mooo.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ccb7b3cd40a7cdc3",
        "type": "telegram bot",
        "botname": "soa_pc_2022",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "324c206d2a6d01ac",
        "type": "tls-config",
        "z": "0e5b3778adc62c63",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "57a2b28a73a273b8",
        "type": "tls-config",
        "z": "a6bb807b10db2b5c",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "0a8e5288251d92fc",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "3cb71b766eb54a51",
        "type": "function",
        "z": "a6bb807b10db2b5c",
        "name": "Check URL ",
        "func": "let token = msg.token;\n\nif (!token) {\n    token = \"No hay token :(\";\n}\n\nflow.set(\"token\", token);\n\nlet url = msg.urlBase;\n\nif (!url) {\n    return [null, {error: \"No está definida la URL base. Revisar archivo config.json\"}];\n}\n\nif (url.startsWith(\"https\") && url.length > 10) {\n    \n    if (!url.endsWith(\"/\")) url += \"/\";\n    \n    flow.set(\"url\", url);\n    msg.urlBase = url;\n    return [msg, null];\n    \n}\n\nreturn [null, {error: \"No está definida correctamente la URL base. Revisar archivo config.json\"}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 240,
        "wires": [
            [
                "7e4f13013c32bcb6"
            ],
            [
                "b6951f9f85158b7f"
            ]
        ],
        "outputLabels": [
            "OK",
            "Error"
        ]
    },
    {
        "id": "b6951f9f85158b7f",
        "type": "change",
        "z": "a6bb807b10db2b5c",
        "name": "Set payload error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7e4f13013c32bcb6",
        "type": "function",
        "z": "a6bb807b10db2b5c",
        "name": "Preparar Request",
        "func": "\nmsg.url = flow.get(\"url\") + \"api/auth/verify/token?token=\" + flow.get(\"token\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 160,
        "wires": [
            [
                "e2f4c7182fd9c642"
            ]
        ]
    },
    {
        "id": "e2f4c7182fd9c642",
        "type": "http request",
        "z": "a6bb807b10db2b5c",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "57a2b28a73a273b8",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 545,
        "y": 100,
        "wires": [
            [
                "74a686b526dc8160"
            ]
        ],
        "l": false
    },
    {
        "id": "74a686b526dc8160",
        "type": "function",
        "z": "a6bb807b10db2b5c",
        "name": "Status Code",
        "func": "if (msg.statusCode == 200) {\n    return [{payload : 'Logueado OK', url: flow.get(\"url\"), token: flow.get(\"token\")}, null, null, null];\n} else if (msg.statusCode == 401) {\n    return [null, {payload : 'No logueado', url: flow.get(\"url\"), token: flow.get(\"token\")}, null, null];\n} else if (msg.statusCode == \"ECONNREFUSED\") {\n    return [null, null, {payload : 'Desconectado', url: flow.get(\"url\"), token: flow.get(\"token\")}, null];\n} else {\n    return [null, null, null, {payload : \"Desconocido :(\", url: flow.get(\"url\"), token: flow.get(\"token\")}];\n}\nreturn msg;",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            [],
            [],
            [],
            []
        ],
        "outputLabels": [
            "200 OK",
            "401 UA",
            "Disconnected",
            "Desconocido"
        ]
    },
    {
        "id": "5e7ed307de424a37",
        "type": "function",
        "z": "0e5b3778adc62c63",
        "name": "Preparar Request (login)",
        "func": "msg.payload = {\n    username: msg.username,\n    password: msg.password\n}\n\nmsg.url = msg.url + \"api/auth/login\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 140,
        "wires": [
            [
                "04b8cf531ffd885c",
                "49d12542bd6a0e6f"
            ]
        ]
    },
    {
        "id": "507d67821e2b3882",
        "type": "change",
        "z": "0e5b3778adc62c63",
        "name": "Set Username Password",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "username",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "password",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 40,
        "wires": [
            [
                "5e7ed307de424a37"
            ]
        ]
    },
    {
        "id": "04b8cf531ffd885c",
        "type": "http request",
        "z": "0e5b3778adc62c63",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "324c206d2a6d01ac",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 475,
        "y": 220,
        "wires": [
            [
                "f29fb9dc585d78e4"
            ]
        ],
        "l": false
    },
    {
        "id": "49d12542bd6a0e6f",
        "type": "change",
        "z": "0e5b3778adc62c63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Logueando...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 635,
        "y": 80,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "f29fb9dc585d78e4",
        "type": "switch",
        "z": "0e5b3778adc62c63",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 240,
        "wires": [
            [
                "e20da518c33f7b9a",
                "3c4782779d600ca9"
            ],
            [
                "b45ff7e980a15ef3"
            ]
        ],
        "outputLabels": [
            "OK",
            "No OK"
        ]
    },
    {
        "id": "e20da518c33f7b9a",
        "type": "json",
        "z": "0e5b3778adc62c63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 765,
        "y": 220,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "3c4782779d600ca9",
        "type": "change",
        "z": "0e5b3778adc62c63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Token OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 725,
        "y": 180,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "b45ff7e980a15ef3",
        "type": "change",
        "z": "0e5b3778adc62c63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No Token",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 795,
        "y": 260,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "b6dcc870b0710759",
        "type": "inject",
        "z": "cd6a546976db31b5",
        "name": "Inyecto por 1ra vez",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "c752b7fcaebbf094"
            ]
        ]
    },
    {
        "id": "c752b7fcaebbf094",
        "type": "file in",
        "z": "cd6a546976db31b5",
        "name": "Leo archivo config.json",
        "filename": "/data/config.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 400,
        "y": 100,
        "wires": [
            [
                "2d95e012fb84c374"
            ]
        ]
    },
    {
        "id": "2d95e012fb84c374",
        "type": "json",
        "z": "cd6a546976db31b5",
        "name": "Parseo string a json",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "405cc6ed7c5f506f"
            ]
        ]
    },
    {
        "id": "405cc6ed7c5f506f",
        "type": "change",
        "z": "cd6a546976db31b5",
        "name": "Seteo variables en entorno",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 200,
        "wires": [
            [
                "4f8bdf8e0d9d5260"
            ]
        ]
    },
    {
        "id": "b788bda7245e7508",
        "type": "catch",
        "z": "cd6a546976db31b5",
        "name": "Handler errores",
        "scope": [
            "c752b7fcaebbf094"
        ],
        "uncaught": false,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "a0a3ae9131e0633e"
            ]
        ]
    },
    {
        "id": "a0a3ae9131e0633e",
        "type": "function",
        "z": "cd6a546976db31b5",
        "name": "Seteo en !file la config",
        "func": "msg.payload = {\n    urlBase : 'https://cpsoa.mooo.com'\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 320,
        "wires": [
            [
                "50ebe8bf4a566a85"
            ]
        ]
    },
    {
        "id": "50ebe8bf4a566a85",
        "type": "file",
        "z": "cd6a546976db31b5",
        "name": "Escribo file si no existe",
        "filename": "/data/config.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 200,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1dcd3535c8675aa6",
        "type": "watch",
        "z": "cd6a546976db31b5",
        "name": "Veo si cambió el file",
        "files": "/data/config.json",
        "recursive": "",
        "x": 470,
        "y": 380,
        "wires": [
            [
                "997308981787a66d"
            ]
        ]
    },
    {
        "id": "997308981787a66d",
        "type": "delay",
        "z": "cd6a546976db31b5",
        "name": "Delay 1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "c752b7fcaebbf094"
            ]
        ]
    },
    {
        "id": "4f8bdf8e0d9d5260",
        "type": "link out",
        "z": "cd6a546976db31b5",
        "name": "Salida Config",
        "mode": "link",
        "links": [
            "6ec7e51c67e6e5a2"
        ],
        "x": 825,
        "y": 380,
        "wires": []
    },
    {
        "id": "6ec7e51c67e6e5a2",
        "type": "link in",
        "z": "59fa7343ef35ec3d",
        "name": "",
        "links": [
            "4f8bdf8e0d9d5260"
        ],
        "x": 145,
        "y": 100,
        "wires": [
            [
                "8c7e4d71a10d7be1"
            ]
        ]
    },
    {
        "id": "8c7e4d71a10d7be1",
        "type": "change",
        "z": "59fa7343ef35ec3d",
        "name": "Init URL Base / Token",
        "rules": [
            {
                "t": "set",
                "p": "urlBase",
                "pt": "msg",
                "to": "config.urlBase",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "token",
                "pt": "msg",
                "to": "authToken.tokenEncript",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "1477891a04519d8e"
            ]
        ]
    },
    {
        "id": "1477891a04519d8e",
        "type": "subflow:a6bb807b10db2b5c",
        "z": "59fa7343ef35ec3d",
        "name": "",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "2e2372f493751cec"
            ],
            [
                "aecf667e1820c71d",
                "2e2372f493751cec"
            ],
            [
                "2e2372f493751cec"
            ],
            [
                "2e2372f493751cec",
                "d1ee6671ae3b1970"
            ]
        ]
    },
    {
        "id": "aecf667e1820c71d",
        "type": "subflow:0e5b3778adc62c63",
        "z": "59fa7343ef35ec3d",
        "name": "",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "4f1d349bb85c6454"
            ],
            []
        ]
    },
    {
        "id": "2e2372f493751cec",
        "type": "change",
        "z": "59fa7343ef35ec3d",
        "name": "Set Global Estado BE",
        "rules": [
            {
                "t": "set",
                "p": "estadoBE",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4f1d349bb85c6454",
        "type": "change",
        "z": "59fa7343ef35ec3d",
        "name": "Set Token Global",
        "rules": [
            {
                "t": "set",
                "p": "authToken",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d1ee6671ae3b1970",
        "type": "function",
        "z": "59fa7343ef35ec3d",
        "name": "",
        "func": "if (msg.token == \"No hay token :(\") return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 300,
        "wires": [
            [
                "aecf667e1820c71d"
            ]
        ]
    },
    {
        "id": "8315c56790638ce1",
        "type": "mqtt in",
        "z": "27c9c3458b135fa3",
        "name": "",
        "topic": "+/raspi/bme280",
        "qos": "2",
        "datatype": "auto",
        "broker": "2f514204aa9d12a5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 180,
        "wires": [
            [
                "0a56db9b1306bbe3"
            ]
        ]
    },
    {
        "id": "9d341359b113f5ba",
        "type": "debug",
        "z": "27c9c3458b135fa3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "206fd4951af2b5f3",
        "type": "http request",
        "z": "27c9c3458b135fa3",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "0a8e5288251d92fc",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 525,
        "y": 180,
        "wires": [
            [
                "9d341359b113f5ba"
            ]
        ],
        "l": false
    },
    {
        "id": "a6d64e3f5d2d8487",
        "type": "function",
        "z": "27c9c3458b135fa3",
        "name": "Post Historico",
        "func": "let token = global.get(\"authToken.tokenEncript\");\nmsg.headers={};\nmsg.headers[\"Content-Type\"]=\"application/json\";\nmsg.url=global.get(\"config.urlBase\")+'/api/historico?token=' + token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "206fd4951af2b5f3"
            ]
        ]
    },
    {
        "id": "0a56db9b1306bbe3",
        "type": "json",
        "z": "27c9c3458b135fa3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 235,
        "y": 180,
        "wires": [
            [
                "a6d64e3f5d2d8487"
            ]
        ],
        "l": false
    }
]